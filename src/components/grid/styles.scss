@use 'styles/mixins' as mx;
@use 'styles/config' as cfg;

$component: grid;

@mixin get-columns {
  @for $size from 0 through cfg.$grid-columns {
    @if $size == 0 {
      &_#{$size} {
        display: none;
      }
    } @else {
      &_#{$size} {
        display: grid;
        grid-column: span #{$size};
      }
    }
  }
}

@mixin grid-align-horizontal($align) {
  &_#{$align} {
    justify-self: $align;
  }
}

@mixin grid-align-vertical($align) {
  &_#{$align} {
    align-self: $align;
  }
}

@mixin grid-align($direction) {
  @each $align in cfg.$grid-align-list {
    @if $direction == 'x' {
      @include grid-align-horizontal($align);
    } @else {
      @include grid-align-vertical($align);
    }
  }
}

.#{$component} {
  display: grid;
  grid-template-columns: repeat(#{cfg.$grid-columns}, 1fr);
  column-gap: cfg.$grid-column-gap;
  row-gap: cfg.$grid-row-gap;
  width: 100%;

  &__item {
    @include get-columns;

    &_tablet {
      @include mx.tablet {
        @include get-columns;
      }
    }

    &_desktop {
      @include mx.desktop {
        @include get-columns;
      }
    }

    &_x {
      @include grid-align('x');

      &-tablet {
        @include mx.tablet {
          @include grid-align('x');
        }
      }

      &-desktop {
        @include mx.desktop {
          @include grid-align('x');
        }
      }
    }

    &_y {
      @include grid-align('y');

      &-tablet {
        @include mx.tablet {
          @include grid-align('y');
        }
      }

      &-desktop {
        @include mx.desktop {
          @include grid-align('y');
        }
      }
    }
  }
}
